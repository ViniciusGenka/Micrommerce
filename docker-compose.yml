version: '3.7'

services:
  catalog-service-mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"

  catalog-service-redis:
    image: redis:latest
    container_name: catalog-service-redis
    ports:
      - "6379:6379"

  inventory-service-mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'inventory_service'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'

  order-service-mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'order_service'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3307:3306'

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka-broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  service-discovery:
    image: YOUR_DOCKER_HUB_USERNAME/service-discovery:latest
    container_name: service-discovery
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: YOUR_DOCKER_HUB_USERNAME/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - service-discovery

  catalog-service:
    container_name: catalog-service
    image: YOUR_DOCKER_HUB_USERNAME/catalog-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - catalog-service-mongo
      - redis
      - kafka-broker
      - zipkin
      - service-discovery
      - api-gateway

  order-service:
    container_name: order-service
    image: YOUR_DOCKER_HUB_USERNAME/order-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - order-service-mysql
      - kafka-broker
      - zipkin
      - service-discovery
      - api-gateway

  inventory-service:
    container_name: inventory-service
    image: YOUR_DOCKER_HUB_USERNAME/inventory-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - inventory-service-mysql
      - kafka-broker
      - zipkin
      - service-discovery
      - api-gateway

  notification-service:
    container_name: notification-service
    image: YOUR_DOCKER_HUB_USERNAME/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka-broker
      - zipkin
      - service-discovery
      - api-gateway

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-docker.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - catalog-service
      - inventory-service
      - order-service
      - notification-service

  grafana:
    image: grafana/grafana-oss:10.1.5
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
